SSTO = YTY-(1/n)*t(Y)%*%J%*%Y
SSE = t(Y)%*%(I-H)%*%Y
SSR = t(Y)%*%(H-(1/n)*J)%*%Y
MSE = SSE/2
MSR = SSR/2
f = MSR/MSE; f
1-pf(f,2,2)
#part 8
p = 2
(SSR/SSTO)
1-((SSE/n-p)/(SSTO/n-1))
1-(SSE/SSTO)*((n-1)/(n-p))
num = (SSE/n-p)
den = (SSTO/n-1)
1-num/den
num = SSE/(n-p)
den = SSTO/(n-1)
1-num/den
#part 9
solve(XTX)*8.57
########################################################
########## Dwaine Studio    ############################
########################################################
dat.dw<-read.table(url("http://people.uncw.edu/wangy/Classes/stt512/dataset/dwaine.txt"),header=TRUE)
install.packages('dplyr')
install.packages('plotly')
p <- plot_ly(dat.dw, x = ~X1, y = ~X2, z = ~Y) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'number of person'),
yaxis = list(title = 'per capita'),
zaxis = list(title = 'sales')))
add_markers(plot_ly(dat.dw, x = ~X1, y = ~X2, z = ~Y))
###########   Basic model    ############
model.dw<-summary(lm(Y~X1+X2,data=dat.dw));
n<-dim(dat.dw)[1]
X<-cbind(1,dat.dw$X1,dat.dw$X2); Y<-dat.dw$Y;
beta<-solve(t(X)%*%X)%*%t(X)%*%Y
beta;model.dw$coefficients;
#fitted value
H<-X%*%solve(t(X)%*%X)%*%t(X)
yhat<-H%*%Y;
yhat;lm(Y~X1+X2,data=dat.dw)$fitted.values
#residual
e<-(diag(1,n)-H)%*%Y;
e;model.dw$residuals;
### diagnosis of residuals
par(mfrow=c(2,2))
plot(yhat,e);plot(X[,2],e); plot(X[,3],e); plot(X[,2]*X[,3],e)
## do you see a sysmetic pattern for the last plot?
model.dw2<-summary(lm(Y~X1+X2+X1*X2,data=dat.dw));
Xp<-cbind(1,dat.dw$X1,dat.dw$X2,dat.dw$X1*dat.dw$X2);
betap<-solve(t(Xp)%*%Xp)%*%t(Xp)%*%Y
betap;model.dw2$coefficients;
#ANOVA
J<-matrix(1,nrow=n,ncol=n);
ssto<-t(Y)%*%Y-t(Y)%*%J%*%Y/n;
sse<-t(Y)%*%Y-t(beta)%*%t(X)%*%Y;
ssr<-t(beta)%*%t(X)%*%Y-t(Y)%*%J%*%Y/n;
ssr;sse;ssto
anova(lm(Y~X1+X2,data=dat.dw))
### F test of the overall model, H0:beta1=beta2=0 vs H1: at least one is not zero
msr<-ssr/(length(beta)-1); mse<-sse/(n-length(beta))
f.val<-msr/mse;
p.val<-1-pf(f.val,length(beta)-1,n-length(beta))
model.dw;
## coefficient of mutiple deermination
r.square<-1-sse/ssto;
r.adj<-1-(sse/(n-length(beta)))/(ssto/(n-1));
## se of beta
var.beta<-model.dw$sigma^2*solve(t(X)%*%X);
se.b1b2<-sqrt(diag(var.beta))[-1];
se.b1b2; model.dw;
## 90% bonferroni CI for beta1 and beta2
cbind(beta[-1]-qt(1-.1/2/2,n-3)*se.b1b2, beta[-1]+qt(1-.1/2/2,n-3)*se.b1b2);
se.b1b2; model.dw;
se.b1b2
var.beta
diag(var.beta)
?diag()
sqrt(diag(var.beta))
sqrt(diag(var.beta))[-1]
sqrt(39.15)
t = pt(1-(0.1/(2*3)), 5-3)
t
#part 9
vb = solve(XTX)*8.57
CI0 = c(Bo-(t*sqrt(vb[1,1])))
#part 10
Bo = -12.476
B1 = 1.524
B2 = 5.905
CI0 = c(Bo-(t*sqrt(vb[1,1])))
CI0 = c(Bo-(t*sqrt(vb[1,1]))); CI0;
sqrt(vb[1,1])
t = qt(1-(0.1/(2*3)), 5-3)
t
CI0 = c(Bo-(t*sqrt(vb[1,1]))); CI0;
CI0 = c(Bo-(t*sqrt(vb[1,1])), B1-(t*sqrt(vb[1,1]))); CI0;
CI0 = c(Bo-(t*sqrt(vb[1,1])), Bo+(t*sqrt(vb[1,1]))); CI0;
CI1 = c(B1-(t*sqrt(vb[1,1])), B1+(t*sqrt(vb[2,2]))); CI1;
CI1 = c(B1-(t*sqrt(vb[2,2])), B1+(t*sqrt(vb[2,2]))); CI1;
CI2 = c(B2-(t*sqrt(vb[3,3])), B2+(t*sqrt(vb[3,3]))); CI2;
CI0
CI1
CI2
#part 11
xh = c(1,3,3)
b = c(Bo, B1, B2)
t(xh)%*%b
#part 12
t(xh)%*%vb%*%xh
Ey = t(xh)%*%b
#part 12
S2yh = t(xh)%*%vb%*%xh
t = qt(1-(0.95/(2)), 5-3)
CIEy =c(Ey-t*sqrt(S2yh))
CIEy
sqrt(45.432)
#part 13
xh2 =rbind(xh, c(1,7,8))
xh2
S2yh
vb
t(xh)
xh
xh
xh2
t(xh2)
xh2%*%vb%*%t(xh2)
t = qt(1-(0.05/(2)), 5-3)
CIEy =c(Ey-t*sqrt(S2yh))
CIEy
CIEy =c(Ey-t*sqrt(S2yh),Ey+t*sqrt(S2yh))
#part 13
xh2 =rbind(xh, c(1,7,8))
CIEy
solve(XTX)*8.57
#part 9
vb = solve(XTX)*MSE
MSE = SSE/2
#part 9
vb = solve(XTX)*MSE
MSE
MSE
#part 9
vb = MSE*solve(XTX)
integer(MSE)
Ey
S2yh
#part 14
ci =c(Ey-t*sqrt(MSE+S1yh))
#part 14
ci =c(Ey-t*sqrt(MSE+S2yh))
ci
#part 14
ci =c(Ey-t*sqrt(MSE+S2yh),Ey+t*sqrt(MSE+S2yh) )
ci
dat = read.csv("http://people.uncw.edu/wangy/Classes/stt512/dataset/hybrid_reg.csv", header = TRUE)
head(dat)
model = lm(msrp~year+mpg+accelrate)
model = lm(msrp~year+mpg+accelrate, data = dat)
pairs(model)
attach(dat)
model = lm(msrp~year+mpg+accelrate)
?pairs()
pairs(msrp, year, mpg, accelrate)
pairs(dat)
pairs(dat[4:6,])
dat[4:6,]
pairs(dat[,4:6])
cor(dat[,4:6])
plot(dat)
plot(model)
?dot()
#part1
pairs(dat[,c(1,4:6])
#part1
pairs(dat[,c(1,4:6)])
#part1
pairs(dat[,c(,3:6)])
#part1
pairs(dat[,3:6])
#part2
cor(dat[,3:6])
summary(model)
plot(model$residuals)
#part5
par(mfrow=c(2,2))
model
plot(model$residuals, model)
#part5
yh = model$Intercept
yh
model$coefficients
model$coefficients[1,1]
#part5
yh = 538047.5110  -265.5451*year -470.5558*mpg +4291.2694*accelrate
plot(model$residuals,yh )
plot(model$residuals,year)
plot(model$residuals,mpg)
plot(model$residuals,accelrate)
#part5
plot(model)
#part6
anova(model)
#part1
pairs(dat[,3:6])
#part2
cor(dat[,3:6])
#part3
model = lm(msrp~year+mpg+accelrate)
summary(model)
#part4
yh = 538047.5110  -265.5451*year -470.5558*mpg +4291.2694*accelrate
par(mfrow=c(2,2))
plot(model$residuals,yh)
plot(model$residuals,year)
plot(model$residuals,mpg)
plot(model$residuals,accelrate)
#part6
anova(model)
#part5
qqplot(model)
dev.off()
#part5
plot(model)
#part7
t = (-140.6-4500)/127.3
t
#part7
t = (-470.6-4500)/127.3
t
pt(-39.04, 149)
### question 5 ###
ex1 = 48.339
ex2 = 15.237
ex3 = 1.130
ex4 = 0.299
ex5 = 0.004
er = 51.645
ex2+ex3+ex4+ex5+er
51+15
SSEx1-ex2
SSEx1-ex2-ex3
SSEx1-ex2-ex3-ex4-ex5
SSEx1 = ex2+ex3+ex4+ex5+er
SSEx1-ex2
SSEx1-ex2-ex3
SSEx1-ex2-ex3-ex4-ex5
SSEx1-SSE2
SSE2 = SSEx1-ex2
SSE3 = SSEx1-ex2-ex3
SSE5 = SSEx1-ex2-ex3-ex4-ex5
SSEx1-SSE2
SSE5-SSE2
SSE2-SSE5
63.576-48.339
65.009-63.576
(65.009-(63.576+1.13))/4
(65.009-(63.576+1.13))/2
1.433/3
(53.078+0.3033*3)/0.3033
53.078/(178-3)
51.645/(178-6)
0.478/0.3
1-pf((0.478/0.3), 3, 172))
1-pf((0.478/0.3), 3, 172)
15.237/0.303
1-pf((15.237/0.303), 1, 175)
pnorm(4.25)
1-pnorm(4.25)
x = cbind(c(rep(1,4)), c(1,1,-1,-1))
x
t(x)%*%x
solve(t(x)%*%x)
x%%solve(t(x)%*%x)
x%%(solve(t(x)%*%x))
xtx = t(x)%*%x
x%*%solve(xtx)
t(x)
x%*%solve(xtx)%*%t(x)
H = x%*%solve(xtx)%*%t(x)
I = diag(1, 5)
I = diag(1, 4)
I
(I-H)%*%Y
(I-H)%*%y
y = c(2,4,9,7)
(I-H)%*%y
t(x)
t(t(x))
u = c(1/2,1/2,-1/2,-1/2)
u =cbind(c(1/2,1/2,0,0),c(1/2,1/2,-1/2,-1/2))
u
u =t(cbind(c(1/2,1/2,0,0),c(1/2,1/2,-1/2,-1/2)))
u
u%*%I%*%(t(u))
X =cbind(c(rep(1, 5)), x1, x2)
x1 =c( 1,1,0,-1,-1)
x2 =c(-1,1,0,-1,1)
y =c(2,4,5,6,10)
X =cbind(c(rep(1, 5)), x1, x2)
X
t(X)%*%X
solve(t(X)%*%X)
1/5
XTX = t(X)%*%X
solve(XTX)
solve(XTX)%*%t(X)%*%y
solve(XTX)%*%t(X)
%*%y
solve(XTX)%*%t(X)%*%y
X = cbind(c(rep),x1,x2)
x1 =c(1,1,0,-1,-1)
x2 =c(-1,1,0,-1,1)
y =c(2,4,5,6,10)
X = cbind(c(rep),x1,x2)
X
X = cbind(c(rep(1,5)),x1,x2)
X
XTX = t(X)%*%X
X%*%XTX
XTX
X%*%solve(XTX)
(1/5)+(1/2)
X%*%solve(XTX)t(X)
X%*%solve(XTX)%*%t(X)
H = X%*%solve(XTX)%*%t(X)
H%*%H
colj = c(rep(1,5)
colj = c(rep(1,5)
)
colj = c(rep(1,5))
J = cbind(colj, colj, colj, colj, colj)
J
t(y)%*%(H-(1/5)*J)%*%y
mid = H-(1/5)*J
mid
0.7-0.5
t(y)%*%mid
first = t(y)%*%mid
first%*%y
y%*%(I-H)%*%y
I = diag(1,5)
I
y%*%(I-H)%*%y
I-H
mid = I-H
t(y)%*%(I-H)%*%y
t(y)%*%mid
first = t(y)%*%mid
first%*%y
34/2
1.2/2
17/0.6
?pf()
f = 17/0.6
1-pf(f,2,2)
t(y)%*%y-(1/5)*t(y)%*%J%*%y
34/35.2
1-(0.6*(4/35.2))
0.6*(4/35.2)
solve(XTX)
0.6*(solve(XTX))
6*25
qt(1-(0.1/6),2)
b =c(5.4,-2.5,1.5)
t = qt(1-(0.1/6),2)
b =c(5.4,-2.5,1.5)
mse =c(0.12,0.15,0.15)
b-t*sqrt(mse)
b+t*sqrt(mse)
Y =cbind(hy, hl)
yh =c(1,1,-1)
yl =c(1,1,1)
Y =cbind(hy, hl)
Y =cbind(yh, yl)
Y
t(Y)%*%solve(XTX)
sb = 0.6*(solve(XTX))
t(Y)%*%sb
t(Y)%*%sb%*%Y
0.12+0.15++0.15
53.965+2.759+5.078
1.934+0.333+0.004
5.078+1.934+0.333+0.004+41.713-41.713
5.078+1.934+0.333+0.004+41.713+53.965+2.759
5.078+1.934+0.333+0.004+41.713-41.713
1.934+0.333+0.004
(1.934+0.333+0.004)/3
0.333+0.004
(0.333+0.004)/2
0.757*(143/41.713)
f = 0.757*(143/41.713)
1-pf(f, 3, 143)
41.713+0.004+0.333
top = 41.713+0.004+0.333
top/147
d = top/147
1.934/d
f=1.934/d
1-pf(f, 1, 147)
print("This is a dummy file")
#install.packages("vqtl")
#install.packages("qtl")
library("vqtl")
library("qtl")
#setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/vQTL Random and Family/data/tidied")
family <-read.cross(file = "Family.csv")
setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/vQTL Random and Family/data/tidied")
family <-read.cross(file = "Family.csv")
head(family)
?read.cross()
#setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/vQTL Random and Family/data/tidied")
family <-read.cross("csv",file = "Family.csv")
#setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/vQTL Random and Family/data/tidied")
family <-read.cross("csv",file = "Family.csv", genotypes = c("A", "B"))
#setwd("C:/Users/twili/Desktop/GIThub/StapletonLab/vQTL Random and Family/data/tidied")
family <-read.cross("csv",file = "Family.csv")
family <- drop.nullmarkers(family)
#scan with variance
outv <-scanonevar(family)
family= sim.geno(family)
names(family)
names(family$pheno)
names(family$geno)
#trying to script fitqtls for all the markers
varlist<- paste("c",1:10, sep = "")
values <- rep(1,10)
df<-data.frame(varlist,values)
pval <- rep(2,3235)
names <- rep("empty",3235)
names[1:531] <- colnames(family$geno$`1`$data)
names[532:879] <- colnames(family$geno$`2`$data)
names[880:1263] <- colnames(family$geno$`3`$data)
names[1264:1583] <- colnames(family$geno$`4`$data)
names[1584:1908] <- colnames(family$geno$`5`$data)
names[1909:2205] <- colnames(family$geno$`6`$data)
names[2206:2475] <- colnames(family$geno$`7`$data)
names[2476:2734] <- colnames(family$geno$`8`$data)
names[2735:3003] <- colnames(family$geno$`9`$data)
names[3004:3235] <- colnames(family$geno$`10`$data)
y = 1
if (length(family$geno[[y]]$data[1,]) >= x) {
df[y,2] <- x
}
else {
df[y,2] <- 1
}
x = 1
if (length(family$geno[[y]]$data[1,]) >= x) {
df[y,2] <- x
}
else {
df[y,2] <- 1
}
if (length(family$geno[[y]]$data[1,]) >= x) {
df[y,2] <- x
}
else {
df[y,2] <- 1
if (length(family$geno[[y]]$data[1,]) >= x) {
df[y,2] <- x
}
else {
df[y,2] <- 1
}
}
{
if (length(family$geno[[y]]$data[1,]) >= x) {
df[y,2] <- x
}
else {
df[y,2] <- 1
}
}
poslist<- c(outv[colnames(family$geno$`1`$data)[df[1,2]],2],
outv[colnames(family$geno$`2`$data)[df[2,2]],2],
outv[colnames(family$geno$`3`$data)[df[3,2]],2],
outv[colnames(family$geno$`4`$data)[df[4,2]],2],
outv[colnames(family$geno$`5`$data)[df[5,2]],2],
outv[colnames(family$geno$`6`$data)[df[6,2]],2],
outv[colnames(family$geno$`7`$data)[df[7,2]],2],
outv[colnames(family$geno$`8`$data)[df[8,2]],2],
outv[colnames(family$geno$`9`$data)[df[9,2]],2],
outv[colnames(family$geno$`10`$data)[df[10,2]],2])
qtl <- makeqtl(family, chr = 1:10, pos = poslist)
fit <- fitqtl(family, qtl = qtl)
sum <- summary(fit)
pval[x] <- sum$result.drop[1,7]
pval[df[2,2]+531] <- sum$result.drop[2,7]
pval[df[3,2]+879] <- sum$result.drop[3,7]
pval[df[4,2]+1263] <- sum$result.drop[4,7]
pval[df[5,2]+1583] <- sum$result.drop[5,7]
pval[df[6,2]+1908] <- sum$result.drop[6,7]
pval[df[7,2]+2205] <- sum$result.drop[7,7]
pval[df[8,2]+2475] <- sum$result.drop[8,7]
pval[df[9,2]+2734] <- sum$result.drop[9,7]
pval[df[10,2]+3003] <- sum$result.drop[10,7]
allpos<-outv[,2]
pval <- data.frame(names,allpos,pval)
pval
#Creating a Manhattan plot
#   Specifically using the qqman package
library(qqman)
install.packages("qqman")
#Creating a Manhattan plot
#   Specifically using the qqman package
library(qqman)
CHR = rep(1,length(pval[,1]))
plotframe <- data.frame(SNP = pval[,1], BP = pval[,2], P = pval[,3], CHR = CHR)
manhattan(plotframe)
